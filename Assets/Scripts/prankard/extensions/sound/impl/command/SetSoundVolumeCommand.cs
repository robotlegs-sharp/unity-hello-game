//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using Robotlegs.Bender.Extensions.CommandCenter.API;
using prankard.extensions.sound.api.events;
using prankard.extensions.sound.api.model;
using prankard.extensions.sound.impl.constant;


namespace prankard.extensions.sound.impl.command
{
	public class SetSoundVolumeCommand : ICommand
	{
		[Inject]
		public SoundVolumeEvent evt {get;set;}
		
		[Inject]
		public ISoundModel model {get;set;}
		
		[Inject(SoundKeys.GAMEOBJECT_MUSIC)]
		public GameObject gameObjectMusic {get;set;}

		public void Execute ()
		{
			switch ((SoundVolumeEvent.Type)evt.type)
			{
			case SoundVolumeEvent.Type.SET_MUSIC_VOLUME:
				model.MusicVolume = evt.volume;
				SetAudioVolume(gameObjectMusic, model.MusicVolume);
				break;
			case SoundVolumeEvent.Type.SET_SOUND_EFFECTS_VOLUME:
				model.SoundVolume = evt.volume;
				break;
			}
		}

		private void SetAudioVolume(GameObject target, float volume)
		{
			AudioSource[] audioSources = target.GetComponents<AudioSource>();
			foreach (AudioSource audioSource in audioSources)
			{
				audioSource.volume = volume;
			}
		}
	}
}

